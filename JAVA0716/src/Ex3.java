
public class Ex3 {

	public static void main(String[] args) {
		/*
		 * 형변환 (Type Casting)
		 * -어떤 데이터 타입을 다른 데이터 타입으로 변환하는 것
		 * 
		 * 1. 묵시적(암시적) 형변환
		 * -작은 데이터 타입 데이터를 큰 데이터 타입으로 변환하는 것
		 * -별다른 추가 작업 없이 그대로 전달하면 컴파일러에 의해 자동으로 변환됨
		 * 
		 * 2. 명시적 형변환 = 강제 형변환
		 * -큰 데이터 타입 데이터를 작은 데이터 타입으로 변환하는 것
		 * -값의 손실(=Overflow)이 발생할 가능성이 있으므로
		 * 	컴파일러에 의해 자동으로 형변환 되지 않는다.
		 * -형변환 연산자를 사용하여 강제 형변환을 수행해야 한다.
		 * 	=>우변 데이터 앞에 소괄호()를 붙이고
		 * 	  괄호 사이에 좌변의 작은 데이터타입(변환할 타입)의 이름을 명시
		 * -강제 형변환 후에도 Overflow에 의해 값의 손실이 일어나 원본 데이터가
		 * 	아닌 다른 데이터가 저장될 수 있음
		 * 	단, 작은 데이터 타입에서 표현 가능한 범위일 경우 기존 값이 유지될 수 있음
		 * 
		 * 
		 */

		int a1 = 999;
		short a2 = 100;
		System.out.println("a1(int) : " + a1 + ", a2(short) : " + a2);
		
		
		a1 = a2; //변수 a2의 데이터를 변수 a1에 저장
		//이 때, 작은 타입인 short 타입 변수 a2의 데이터가 
		//큰 타입인 int 타입으로 변환되는 것을 묵시적 형변환(자동 형변환)이라고 한다.
		System.out.println("a1(int) : " + a1 + ", a2(short) : " + a2);
		
		System.out.println("-----------------------------------------------");
		
		int b1 = 999;
		short b2 = 100;
		System.out.println("b1(int) : " + b1 + ", b2(short) : " + b2);
//		b2 = b1; // int타입 변수 b1의 데이터 (999)를 short 타입 변수 b2에 저장 => 오류
		//큰 타입(int) 데이터를 작은 타입(short)에 저장할때
		// 값에 대한 넘침(overflow)이 발생 할 수 있으므로
		// 자동형변환을 수행하지 않음
		// 형변환 연산자를 사용하여 명시적 형변환(강제적 형변환)을 수행해야함.
		b2=(short)b1;
		//강제 형변환 후에는 Overflow에 의해 원래의 데이터가 아닌
		//다른 변형된 데이터가 저장될 수 있으므로 주의해야한다.
		
		System.out.println("b1(int) :" + b1 + ", b2(short):" + b2);
		//int형 변수 b1의 99999 정수가 short형 변수 b2에 저장되면
		//Overflow에 의해 99999 가 아닌 다른 데이터로 변형됨
		//=>만약, int형 변수 b1에 short타입이 표현 가능한 범위의 데이터가 있을 경우
		//	강제 형변환 후에도 원본 데이터가 그대로 유지될 수 있다.
		System.out.println("---------------------------------------");
		
		int c1 = 266;
		byte c2 = 10;
		System.out.println("c1(int) : " + c1 + ", c2(byte) : " + c2 );
		//작은타입(byte) -> 큰타입(int)로 변환
		c1 = c2;
		System.out.println("c1(int) : " + c1 + ", c2(byte) : " + c2 );
		
		int d1 = 266;
		byte d2 = 10;
		System.out.println("d1(int) : " + d1 + ", d2(byte) : " + 2 );
		//큰타입(int) -> 작은타입(byte)로 변환
		d2=(byte)d1;//형변환 연산자를 사용하여 byte 타입으로 강제형변환
		//=>int형 변수에 저장된 정수 266이 byte타입 변수에 저장될 때 10으로 변형됨
		System.out.println("c1(int) : " + d1 + ", c2(byte) : " + d2 );
		
		
	}

}
